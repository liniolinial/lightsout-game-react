{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\lynn.kim\\\\Documents\\\\Code Lab\\\\lightsout-game-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\lynn.kim\\\\Documents\\\\Code Lab\\\\lightsout-game-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lynn.kim\\\\Documents\\\\Code Lab\\\\lightsout-game-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lynn.kim\\\\Documents\\\\Code Lab\\\\lightsout-game-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lynn.kim\\\\Documents\\\\Code Lab\\\\lightsout-game-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lynn.kim\\\\Documents\\\\Code Lab\\\\lightsout-game-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lynn.kim\\\\Documents\\\\Code Lab\\\\lightsout-game-react\\\\src\\\\Board.js\";\nimport React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Board.css\";\n\n/** Game board of Lights out.\n *\n * Properties:\n *\n * - nrows: number of rows of board\n * - ncols: number of cols of board\n * - chanceLightStartsOn: float, chance any cell is lit at start of game\n *\n * State:\n *\n * - hasWon: boolean, true when board is all off\n * - board: array-of-arrays of true/false\n *\n *    For this board:\n *       .  .  .\n *       O  O  .     (where . is off, and O is on)\n *       .  .  .\n *\n *    This would be: [[f, f, f], [t, t, f], [f, f, f]]\n *\n *  This should render an HTML table of individual <Cell /> components.\n *\n *  This doesn't handle any clicks --- clicks are on individual cells\n *\n **/\nvar Board = /*#__PURE__*/function (_Component) {\n  _inherits(Board, _Component);\n  function Board(props) {\n    var _this;\n    _classCallCheck(this, Board);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      hasWon: false,\n      board: _this.createBoard() // muss ich hier kein binding machen?/ func als props\n    };\n    return _this;\n  }\n  _createClass(Board, [{\n    key: \"createBoard\",\n    value: function createBoard() {\n      var board = []; //weil hier row auch kommt, das Value wird hier x&y also zwei\n      // wichtig hier in func: nested loop- loop in loop\n      for (var y = 0; y < this.props.nrows; y++) {\n        var row = [];\n        for (var x = 0; x < this.props.ncols; x++) {\n          row.push(Math.random() < this.props.chanceLightStartsOn);\n        }\n        board.push(row);\n      }\n      return board;\n    }\n  }, {\n    key: \"flipCellsAround\",\n    value: function flipCellsAround(coord) {\n      console.log(\"FLIPPING!\", coord);\n      var _this$props = this.props,\n        ncols = _this$props.ncols,\n        nrows = _this$props.nrows; // nochmal .this eindeutiger machen.\n      var board = this.state.board;\n      var _coord$split$map = coord.split(\"-\").map(Number),\n        _coord$split$map2 = _slicedToArray(_coord$split$map, 2),\n        y = _coord$split$map2[0],\n        x = _coord$split$map2[1];\n      function flipCell(y, x) {\n        if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n          board[y][x] = !board[y][x];\n        }\n      }\n      flipCell(y, x);\n      flipCell(y, x - 1);\n      flipCell(y, x + 1);\n      flipCell(y - 1, x);\n      flipCell(y + 1, x);\n\n      // let hasWon = false; //für hasWon ist das Wert benötigt //aber hier ist hardcoding, also ändere ich das\n      var hasWon = board.every(function (row) {\n        return row.every(function (cell) {\n          return !cell;\n        });\n      }); //=false\n      this.setState({\n        board: board,\n        hasWon: hasWon\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      // warum hier: wenn der Benutzer Board hat, wird diese Message nicht angezeigt.\n      if (this.state.hasWon) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Board-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"winner\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"neon-orange\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, \"Lights\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"neon-blue\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, \"Out\")));\n      }\n\n      // nochmal nested array & loop\n      var tblBoard = [];\n      for (var y = 0; y < this.props.nrows; y++) {\n        var row = [];\n        var _loop = function _loop() {\n          var coord = \"\".concat(y, \"-\").concat(x);\n          row.push( /*#__PURE__*/React.createElement(Cell, {\n            key: coord,\n            isLit: _this2.state.board[y][x],\n            flipCellsAroundMe: function flipCellsAroundMe() {\n              return _this2.flipCellsAround(coord);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }\n          })); //hier statt this als parameter in flipcell- wegen arrow func\n        };\n        for (var x = 0; x < this.props.ncols; x++) {\n          _loop();\n        }\n        // console.log(row);\n        tblBoard.push( /*#__PURE__*/React.createElement(\"tr\", {\n          key: y,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }\n        }, row)); //in table sollte row angezeigt werden.\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Board-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"neon-orange\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, \"Lights\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"neon-blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, \"Out\")), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"Board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, tblBoard)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, \"How to play\")));\n    }\n  }]);\n  return Board;\n}(Component);\nBoard.defaultProps = {\n  nrows: 5,\n  ncols: 5,\n  chanceLightStartsOn: 0.25\n};\nexport default Board;","map":{"version":3,"names":["React","Component","Cell","Board","_Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","state","hasWon","board","createBoard","_createClass","key","value","y","nrows","row","x","ncols","push","Math","random","chanceLightStartsOn","flipCellsAround","coord","console","log","_this$props","_coord$split$map","split","map","Number","_coord$split$map2","_slicedToArray","flipCell","every","cell","setState","render","_this2","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","tblBoard","_loop","concat","isLit","flipCellsAroundMe","defaultProps"],"sources":["C:/Users/lynn.kim/Documents/Code Lab/lightsout-game-react/src/Board.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Board.css\";\n\n/** Game board of Lights out.\n *\n * Properties:\n *\n * - nrows: number of rows of board\n * - ncols: number of cols of board\n * - chanceLightStartsOn: float, chance any cell is lit at start of game\n *\n * State:\n *\n * - hasWon: boolean, true when board is all off\n * - board: array-of-arrays of true/false\n *\n *    For this board:\n *       .  .  .\n *       O  O  .     (where . is off, and O is on)\n *       .  .  .\n *\n *    This would be: [[f, f, f], [t, t, f], [f, f, f]]\n *\n *  This should render an HTML table of individual <Cell /> components.\n *\n *  This doesn't handle any clicks --- clicks are on individual cells\n *\n **/\n\nclass Board extends Component {\n  static defaultProps = {\n    nrows: 5,\n    ncols: 5,\n    chanceLightStartsOn: 0.25,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasWon: false,\n      board: this.createBoard(), // muss ich hier kein binding machen?/ func als props\n    };\n  }\n\n  createBoard() {\n    let board = []; //weil hier row auch kommt, das Value wird hier x&y also zwei\n    // wichtig hier in func: nested loop- loop in loop\n    for (let y = 0; y < this.props.nrows; y++) {\n      let row = [];\n      for (let x = 0; x < this.props.ncols; x++) {\n        row.push(Math.random() < this.props.chanceLightStartsOn);\n      }\n      board.push(row);\n    }\n    return board;\n  }\n\n  flipCellsAround(coord) {\n    console.log(\"FLIPPING!\", coord);\n    let { ncols, nrows } = this.props; // nochmal .this eindeutiger machen.\n    let board = this.state.board;\n    let [y, x] = coord.split(\"-\").map(Number);\n\n    function flipCell(y, x) {\n      if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n        board[y][x] = !board[y][x];\n      }\n    }\n\n    flipCell(y, x);\n    flipCell(y, x - 1);\n    flipCell(y, x + 1);\n    flipCell(y - 1, x);\n    flipCell(y + 1, x);\n\n    // let hasWon = false; //für hasWon ist das Wert benötigt //aber hier ist hardcoding, also ändere ich das\n    let hasWon = board.every((row) => row.every((cell) => !cell)); //=false\n    this.setState({ board: board, hasWon: hasWon });\n  }\n\n  render() {\n    // warum hier: wenn der Benutzer Board hat, wird diese Message nicht angezeigt.\n    if (this.state.hasWon) {\n      return (\n        <div className='Board-title'>\n          <div className='winner'>\n            <div className='neon-orange'>Lights</div>\n            <div className='neon-blue'>Out</div>\n          </div>\n        </div>\n      );\n    }\n\n    // nochmal nested array & loop\n    let tblBoard = [];\n    for (let y = 0; y < this.props.nrows; y++) {\n      let row = [];\n      for (let x = 0; x < this.props.ncols; x++) {\n        let coord = `${y}-${x}`;\n        row.push(\n          <Cell\n            key={coord}\n            isLit={this.state.board[y][x]}\n            flipCellsAroundMe={() => this.flipCellsAround(coord)}\n          />,\n        ); //hier statt this als parameter in flipcell- wegen arrow func\n      }\n      // console.log(row);\n      tblBoard.push(<tr key={y}>{row}</tr>); //in table sollte row angezeigt werden.\n    }\n    return (\n      <div>\n        <div className='Board-title'>\n          <div className='neon-orange'>Lights</div>\n          <div className='neon-blue'>Out</div>\n        </div>\n        <table className='Board'>\n          <tbody>{tblBoard}</tbody>\n        </table>\n        <div>\n          <h2>How to play</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}